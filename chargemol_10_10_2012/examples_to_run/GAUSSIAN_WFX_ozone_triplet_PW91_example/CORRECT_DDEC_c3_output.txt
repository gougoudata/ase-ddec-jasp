
                            < M A T L A B (R) >
                  Copyright 1984-2010 The MathWorks, Inc.
                Version 7.10.0.499 (R2010a) 64-bit (glnxa64)
                              February 5, 2010

 
  To get started, type one of these: helpwin, helpdesk, or demo.
  For product information, visit www.mathworks.com.
 
>> 
periodicA =

     0


periodicB =

     0


periodicC =

     0


netcharge =

     0


input_type =

     5


vaspversion =

     5


atomic_densities_directory =

~/bin/atomic_densities/


sourcecode_directory =

~/bin/sourcecode_08_19_2012/


nshells =

   100


cutoff_radius =

   500


zero_tolerance =

   1.0000e-08


integration_tolerance =

    0.1000


integration_tolerance_percent =

    0.0300


minpixelvolume =

    0.0081


pixel_integration_tolerance =

    0.0300


charge_convergence_tolerance =

   1.0000e-05


spin_convergence_tolerance =

   5.0000e-05


distance_tolerance =

   1.0000e-06


reference_weighting =

    0.2143


rmin_cloud_penetration =

   200


density_decaying_exponent =

    1.7500


density_set_prefix =

c2


spin_ref_fraction =

    0.5000


wA_renormalization_max =

    10


SAXIS =

    0.0000         0    1.0000


preferred_grid_spacing =

    0.1400


gaussian_overlap_tolerance =

   1.0000e-12


analytic_alpha_cutoff =

     5


periodic_cutoff_length =

    28


xsf_inputfile =

valence_density.xsf


wfx_inputfile =

ozone_triplet_PW91.wfx


ans =

Entering

06-Oct-2012 02:10:44

ans =

GTO basis set type is supported. Calculation will proceed.


ncenters =

     3


norbitals =

    24


netcharge =

     0


nprimitives =

   108


ans =

Natural orbital occupation numbers for alpha (1st column) and beta (2nd column) electrons.


alpha_beta_occupation =

     1     0
     1     0
     1     0
     1     0
     1     0
     1     0
     1     0
     1     0
     1     0
     1     0
     1     0
     1     0
     1     0
     0     1
     0     1
     0     1
     0     1
     0     1
     0     1
     0     1
     0     1
     0     1
     0     1
     0     1


ans =

The total number of electrons in natural orbitals is


included_electrons =

    24


natoms =

     3


ans =

The number of valence electrons is consistent with the sum of orbital occupations.


ans =

Initial setup of atoms using temporary origin (0,0,0)


center_nabc =

     0     0     8
     0    14    -4
     0   -14    -4


delta_na =

    69


delta_nb =

    69


delta_nc =

    69


ans =

Compute a better origin and number of grid points along each grid direction


totnumA =

   138


totnumB =

   166


totnumC =

   150


ans =

The new origin is


origin =

   -9.6600  -11.6200  -10.2200


ans =

Compute atomic positions using the better origin


center_nabc =

    69    83    81
    69    97    69
    69    69    69


nimages =

     1


ans =

Setup of grid points was successful.


ans =

The number of primitive products to treat analytically is


num_analytic_primitive_pairs =

        1760


ans =

The number of primitive products to treat numerically is


num_numeric_primitive_pairs =

        1312


ans =

The total number of included primitives is


num_included_primitive_pairs =

        3072


ans =

The one-particle density matrix is properly normalized.


ans =

The transformation of gaussian primitives was succesful.


count =

   100


count =

   200


count =

   300


count =

   400


count =

   500


count =

   600


count =

   700


count =

   800


count =

   900


count =

        1000


count =

        1100


count =

        1200


count =

        1300


count =

        1400


count =

        1500


count =

        1600


count =

        1700


count =

        1800


count =

        1900


count =

        2000


count =

        2100


count =

        2200


count =

        2300


count =

        2400


count =

        2500


count =

        2600


count =

        2700


count =

        2800


count =

        2900


count =

        3000


count =

   100


count =

   200


count =

   300


count =

   400


count =

   500


count =

   600


count =

   700


count =

   800


count =

   900


count =

        1000


count =

        1100


count =

        1200


count =

        1300


count =

        1400


count =

        1500


count =

        1600


count =

        1700


count =

        1800


count =

        1900


count =

        2000


count =

        2100


count =

        2200


count =

        2300


count =

        2400


count =

        2500


count =

        2600


count =

        2700


count =

        2800


count =

        2900


count =

        3000


ans =

Generation of the valence and spin density for each grid point was successful.


center_nabc =

    69    83    81
    69    97    69
    69    69    69


delta_na =

    69


delta_nb =

    69


delta_nc =

    69


ans =

The grid spacing in your electron density input file is adequate.


ans =

Checking to see that all core electrons are accounted for:


ans =

Finished the check for missing core electrons.


ncore =

     0


nvalence =

    24


checkme =

   7.1441e-09


ans =

The grid spacing is adequate and all electrons are properly accounted for.


ans =

Calculation will proceed.


ans =

Iteratively solving for the core charge distributions:


iter =

     1


change =

    2.6196


iter =

     2


change =

   1.4194e-04


iter =

     3


change =

   3.4223e-05


iter =

     4


change =

   1.3777e-05


iter =

     5


change =

   4.1051e-06


iter =

     6


change =

   1.2082e-06


ans =

Iteratively solving for the atomic partial charge distributions:


iter =

     1


normalization =

    1.0000


valence_population =

    7.8889    8.0555    8.0555


max_change =

    8.0555


max_density_change =

  235.8258


ans =

Information for noniterative Hirshfeld method will be printed now.


ans =

Multipole analysis for each of the expansion sites.


ans =

XYZ coordinates, net charges, and multipoles are in atomic units. Dipoles and quadrupoles are for valence electrons.


ans =

center number, atomic number, x, y, z, net_charge, dipole_x, dipole_y, dipole_z, dipole_mag, Qxy, Qxz, Qyz, Q(x^2-y^2), Q(3z^2 - R^2)


final_result =

  Columns 1 through 7

    1.0000    8.0000   -0.0000         0    1.1010    0.1111   -0.0000
    2.0000    8.0000   -0.0000    1.9454   -0.5505   -0.0555    0.0000
    3.0000    8.0000   -0.0000   -1.9454   -0.5505   -0.0555   -0.0000

  Columns 8 through 14

    0.0000   -0.1190    0.1190   -0.0000    0.0000    0.0000   -0.1375
   -0.0742    0.1146    0.1365   -0.0000    0.0000   -0.1193   -0.3170
    0.0742    0.1146    0.1365   -0.0000    0.0000    0.1193   -0.3170

  Column 15

   -0.1383
    0.0748
    0.0748


ans =

Hirshfeld analysis finished, calculation of iterative AIM will proceed.


Hirshfeld_population =

    7.8889    8.0555    8.0555


iter =

     2


normalization =

    1.0000


valence_population =

    7.8429    8.0786    8.0786


max_change =

    0.0461


max_density_change =

    0.0032


iter =

     3


normalization =

    1.0000


valence_population =

    7.8199    8.0900    8.0900


max_change =

    0.0230


max_density_change =

   3.6071e-04


iter =

     4


normalization =

    1.0000


valence_population =

    7.8083    8.0959    8.0959


max_change =

    0.0116


max_density_change =

   1.4178e-04


ans =

Iterations to converge reshaping: 


ans =

     1


iter =

     5


normalization =

    1.0000


valence_population =

    7.8021    8.0989    8.0989


max_change =

    0.0062


max_density_change =

   6.2776e-05


ans =

Iterations to converge reshaping: 


ans =

     1


iter =

     6


normalization =

    1.0000


valence_population =

    7.7988    8.1006    8.1006


max_change =

    0.0034


max_density_change =

   3.0161e-05


ans =

Iterations to converge reshaping: 


ans =

     1


iter =

     7


normalization =

    1.0000


valence_population =

    7.7969    8.1016    8.1016


max_change =

    0.0019


max_density_change =

   1.5564e-05


ans =

Iterations to converge reshaping: 


ans =

     1


iter =

     8


normalization =

    1.0000


valence_population =

    7.7958    8.1021    8.1021


max_change =

    0.0011


max_density_change =

   8.4523e-06


ans =

Iterations to converge reshaping: 


ans =

     1


iter =

     9


normalization =

    1.0000


valence_population =

    7.7952    8.1024    8.1024


max_change =

   6.2101e-04


max_density_change =

   4.7073e-06


ans =

Iterations to converge reshaping: 


ans =

     1


iter =

    10


normalization =

    1.0000


valence_population =

    7.7948    8.1026    8.1026


max_change =

   3.6461e-04


max_density_change =

   2.6739e-06


ans =

Iterations to converge reshaping: 


ans =

     1


iter =

    11


normalization =

    1.0000


valence_population =

    7.7946    8.1027    8.1027


max_change =

   2.1634e-04


max_density_change =

   1.5427e-06


ans =

Iterations to converge reshaping: 


ans =

     1


iter =

    12


normalization =

    1.0000


valence_population =

    7.7945    8.1028    8.1028


max_change =

   1.2953e-04


max_density_change =

   9.0114e-07


ans =

Iterations to converge reshaping: 


ans =

     1


iter =

    13


normalization =

    1.0000


valence_population =

    7.7944    8.1028    8.1028


max_change =

   7.8157e-05


max_density_change =

   5.3182e-07


ans =

Iterations to converge reshaping: 


ans =

     1


iter =

    14


normalization =

    1.0000


valence_population =

    7.7943    8.1028    8.1028


max_change =

   4.7475e-05


max_density_change =

   3.1659e-07


ans =

Iterations to converge reshaping: 


ans =

     1


iter =

    15


normalization =

    1.0000


valence_population =

    7.7943    8.1028    8.1028


max_change =

   2.9023e-05


max_density_change =

   1.8990e-07


ans =

Iterations to converge reshaping: 


ans =

     1


iter =

    16


normalization =

    1.0000


valence_population =

    7.7943    8.1029    8.1029


max_change =

   1.7836e-05


max_density_change =

   1.1466e-07


ans =

Iterations to converge reshaping: 


ans =

     1


iter =

    17


normalization =

    1.0000


valence_population =

    7.7943    8.1029    8.1029


max_change =

   1.1015e-05


max_density_change =

   6.9655e-08


ans =

Iterations to converge reshaping: 


ans =

     1


iter =

    18


normalization =

    1.0000


valence_population =

    7.7943    8.1029    8.1029


max_change =

   6.8368e-06


max_density_change =

   4.2543e-08


ans =

Iterations to converge reshaping: 


ans =

     1


iter =

    19


normalization =

    1.0000


valence_population =

    7.7943    8.1029    8.1029


max_change =

   4.2694e-06


max_density_change =

   2.6114e-08


ans =

Iterations to converge reshaping: 


ans =

     1


iter =

    20


normalization =

    1.0000


valence_population =

    7.7943    8.1029    8.1029


max_change =

   2.6719e-06


max_density_change =

   1.6105e-08


ans =

Iterations to converge reshaping: 


ans =

     1


iter =

    21


normalization =

    1.0000


valence_population =

    7.7943    8.1029    8.1029


max_change =

   1.6779e-06


max_density_change =

   9.9799e-09


ans =

Multipole analysis for each of the expansion sites.


ans =

XYZ coordinates, net charges, and multipoles are in atomic units. Dipoles and quadrupoles are for valence electrons.


ans =

center number, atomic number, x, y, z, net_charge, dipole_x, dipole_y, dipole_z, dipole_mag, Qxy, Qxz, Qyz, Q(x^2-y^2), Q(3z^2 - R^2)


final_result =

  Columns 1 through 7

    1.0000    8.0000   -0.0000         0    1.1010    0.2057    0.0000
    2.0000    8.0000   -0.0000    1.9454   -0.5505   -0.1029    0.0000
    3.0000    8.0000   -0.0000   -1.9454   -0.5505   -0.1029   -0.0000

  Columns 8 through 14

    0.0000   -0.2108    0.2108   -0.0000    0.0000    0.0000   -0.2509
   -0.0526    0.0823    0.0977    0.0000    0.0000   -0.1113   -0.3556
    0.0526    0.0823    0.0977    0.0000    0.0000    0.1113   -0.3556

  Column 15

   -0.1677
    0.0394
    0.0394


center_of_mass =

   1.0e-13 *

   -0.0008         0    0.6662


ans =

Since the system is nonperiodic, total multipole moment analysis will be performed.


ans =

Total multipole moments are computed using the center of mass as the origin.


ans =

Dipole and quadrupole moments using the net atomic charges.


ans =

This corresponds to truncatating the distributed multipole expansion at monopole order.


partial_charge_dipole_x =

   2.4507e-17


partial_charge_dipole_y =

  -1.0670e-09


partial_charge_dipole_z =

    0.3398


partial_charge_dipole_magnitude =

    0.3398


partial_charge_quadrupole_xy =

  -4.7677e-17


partial_charge_quadrupole_xz =

   1.3492e-17


partial_charge_quadrupole_yz =

   5.8739e-10


partial_charge_quadrupole_x2minusy2 =

    0.7786


partial_charge_quadrupole_3z2minusr2 =

    1.1527


ans =

Dipole and quadrupole moments using the net atomic charges and the atomic dipoles.


ans =

This corresponds to truncatating the distributed multipole expansion at dipole order.


dipole_x =

  -6.1908e-16


dipole_y =

  -1.5419e-09


dipole_z =

    0.2936


dipole_magnitude =

    0.2936


quadrupole_xy =

   3.1209e-14


quadrupole_xz =

   8.8832e-15


quadrupole_yz =

   9.7558e-10


quadrupole_x2minusy2 =

    1.1882


quadrupole_3z2minusr2 =

    0.2713


ans =

Dipole and quadrupole moments using the net atomic charges, atomic dipoles, and atomic quadrupoles.


ans =

This corresponds to truncatating the distributed multipole expansion at quadrupole order.


dipole_x =

  -6.1908e-16


dipole_y =

  -1.5419e-09


dipole_z =

    0.2936


dipole_magnitude =

    0.2936


quadrupole_xy =

   3.1757e-14


quadrupole_xz =

   9.3157e-15


quadrupole_yz =

   1.0914e-09


quadrupole_x2minusy2 =

    0.2261


quadrupole_3z2minusr2 =

    0.1823


ans =

Calculation of the electron cloud penetration terms

06-Oct-2012 02:33:07

ans =

Iteratively solving for the atomic spin distributions:


iter =

     1


spin_population =

    0.3970    0.8015    0.8015


tot_spin_moment =

    2.0000


max_change =

    0.8015


iter =

     2


spin_population =

    0.3797    0.8100    0.8100


tot_spin_moment =

    1.9996


max_change =

    0.0174


iter =

     3


spin_population =

    0.3765    0.8118    0.8118


tot_spin_moment =

    2.0002


max_change =

    0.0032


iter =

     4


spin_population =

    0.3757    0.8121    0.8121


tot_spin_moment =

    1.9999


max_change =

   8.1477e-04


iter =

     5


spin_population =

    0.3755    0.8123    0.8123


tot_spin_moment =

    2.0000


max_change =

   1.6587e-04


iter =

     6


spin_population =

    0.3754    0.8123    0.8123


tot_spin_moment =

    2.0000


max_change =

   6.0142e-05


iter =

     7


spin_population =

    0.3754    0.8123    0.8123


tot_spin_moment =

    2.0000


max_change =

   1.5173e-05


ans =

Final spin populations:


spin_population =

    0.3754    0.8123    0.8123


ans =

The total spin moment of the unit cell is   


tot_spin_moment =

    2.0000


ans =

Normal termination of Chargemol program.


ans =

Use and distribution of this program is subject to certain licensing restrictions.


ans =

Please see ddec.sourceforge.net for details.


ans =

Please cite the following journal reference when using this program to compute DDEC, Hirshfeld, or ISA charges:


ans =

Thomas A. Manz and David S. Sholl, "Chemically Meaningful Atomic Charges that Reproduce the Electrostatic Potential in Periodic and Nonperiodic Materials", J. Chem. Theory Comput., Vol. 6 (2010) 2455-2468.


ans =

Please cite the following journal reference when using this program to compute atomic spin moments:


ans =

Thomas A. Manz and David S. Sholl, "Methods for Computing Accurate Atomic Spin Moments for Collinear and Noncollinear Magnetism in Periodic and Nonperiodic Materials", J. Chem. Theory Comput., Vol. 7 (2011) 4146-4164.


ans =

Exiting Chargemol

06-Oct-2012 02:37:46
 
