
                            < M A T L A B (R) >
                  Copyright 1984-2010 The MathWorks, Inc.
                Version 7.10.0.499 (R2010a) 64-bit (glnxa64)
                              February 5, 2010

 
  To get started, type one of these: helpwin, helpdesk, or demo.
  For product information, visit www.mathworks.com.
 
>> 
periodicA =

     0


periodicB =

     0


periodicC =

     0


netcharge =

     0


input_type =

     5


vaspversion =

     5


atomic_densities_directory =

~/bin/atomic_densities/


sourcecode_directory =

~/bin/sourcecode_08_19_2012/


nshells =

   100


cutoff_radius =

   500


zero_tolerance =

   1.0000e-08


integration_tolerance =

    0.1000


integration_tolerance_percent =

    0.0300


minpixelvolume =

    0.0081


pixel_integration_tolerance =

    0.0300


charge_convergence_tolerance =

   1.0000e-05


spin_convergence_tolerance =

   5.0000e-05


distance_tolerance =

   1.0000e-06


reference_weighting =

    0.2143


rmin_cloud_penetration =

   200


density_decaying_exponent =

    1.7500


density_set_prefix =

c2


spin_ref_fraction =

    0.5000


wA_renormalization_max =

    10


SAXIS =

    0.0000         0    1.0000


preferred_grid_spacing =

    0.1400


gaussian_overlap_tolerance =

   1.0000e-12


analytic_alpha_cutoff =

     5


periodic_cutoff_length =

    28


xsf_inputfile =

valence_density.xsf


wfx_inputfile =

ozone+1_PW91.wfx


ans =

Entering

06-Oct-2012 02:13:22

ans =

GTO basis set type is supported. Calculation will proceed.


ncenters =

     3


norbitals =

    23


netcharge =

     1


nprimitives =

   108


ans =

Natural orbital occupation numbers for alpha (1st column) and beta (2nd column) electrons.


alpha_beta_occupation =

     1     0
     1     0
     1     0
     1     0
     1     0
     1     0
     1     0
     1     0
     1     0
     1     0
     1     0
     1     0
     0     1
     0     1
     0     1
     0     1
     0     1
     0     1
     0     1
     0     1
     0     1
     0     1
     0     1


ans =

The total number of electrons in natural orbitals is


included_electrons =

    23


natoms =

     3


ans =

The number of valence electrons is consistent with the sum of orbital occupations.


ans =

Initial setup of atoms using temporary origin (0,0,0)


center_nabc =

     0     0     4
     0    15    -2
     0   -15    -2


delta_na =

    69


delta_nb =

    69


delta_nc =

    69


ans =

Compute a better origin and number of grid points along each grid direction


totnumA =

   138


totnumB =

   168


totnumC =

   144


ans =

The new origin is


origin =

   -9.6600  -11.7600   -9.9400


ans =

Compute atomic positions using the better origin


center_nabc =

    69    84    75
    69    99    69
    69    69    69


nimages =

     1


ans =

Setup of grid points was successful.


ans =

The number of primitive products to treat analytically is


num_analytic_primitive_pairs =

        1755


ans =

The number of primitive products to treat numerically is


num_numeric_primitive_pairs =

        1310


ans =

The total number of included primitives is


num_included_primitive_pairs =

        3065


ans =

The one-particle density matrix is properly normalized.


ans =

The transformation of gaussian primitives was succesful.


count =

   100


count =

   200


count =

   300


count =

   400


count =

   500


count =

   600


count =

   700


count =

   800


count =

   900


count =

        1000


count =

        1100


count =

        1200


count =

        1300


count =

        1400


count =

        1500


count =

        1600


count =

        1700


count =

        1800


count =

        1900


count =

        2000


count =

        2100


count =

        2200


count =

        2300


count =

        2400


count =

        2500


count =

        2600


count =

        2700


count =

        2800


count =

        2900


count =

        3000


count =

   100


count =

   200


count =

   300


count =

   400


count =

   500


count =

   600


count =

   700


count =

   800


count =

   900


count =

        1000


count =

        1100


count =

        1200


count =

        1300


count =

        1400


count =

        1500


count =

        1600


count =

        1700


count =

        1800


count =

        1900


count =

        2000


count =

        2100


count =

        2200


count =

        2300


count =

        2400


count =

        2500


count =

        2600


count =

        2700


count =

        2800


count =

        2900


count =

        3000


ans =

Generation of the valence and spin density for each grid point was successful.


center_nabc =

    69    84    75
    69    99    69
    69    69    69


delta_na =

    69


delta_nb =

    69


delta_nc =

    69


ans =

The grid spacing in your electron density input file is adequate.


ans =

Checking to see that all core electrons are accounted for:


ans =

Finished the check for missing core electrons.


ncore =

     0


nvalence =

    23


checkme =

   1.5904e-08


ans =

The grid spacing is adequate and all electrons are properly accounted for.


ans =

Calculation will proceed.


ans =

Iteratively solving for the core charge distributions:


iter =

     1


change =

    2.4437


iter =

     2


change =

   8.7377e-04


iter =

     3


change =

   1.1252e-04


iter =

     4


change =

   5.9793e-05


iter =

     5


change =

   2.0918e-05


iter =

     6


change =

   7.1030e-06


ans =

Iteratively solving for the atomic partial charge distributions:


iter =

     1


normalization =

    1.0000


valence_population =

    7.5925    7.7038    7.7038


max_change =

    7.7038


max_density_change =

  157.1393


ans =

Information for noniterative Hirshfeld method will be printed now.


ans =

Multipole analysis for each of the expansion sites.


ans =

XYZ coordinates, net charges, and multipoles are in atomic units. Dipoles and quadrupoles are for valence electrons.


ans =

center number, atomic number, x, y, z, net_charge, dipole_x, dipole_y, dipole_z, dipole_mag, Qxy, Qxz, Qyz, Q(x^2-y^2), Q(3z^2 - R^2)


final_result =

  Columns 1 through 7

    1.0000    8.0000    0.0000         0    0.6030    0.4075    0.0000
    2.0000    8.0000   -0.0000    2.1452   -0.3015    0.2962   -0.0000
    3.0000    8.0000   -0.0000   -2.1452   -0.3015    0.2962    0.0000

  Columns 8 through 14

    0.0000   -0.0413    0.0413    0.0000    0.0000    0.0000    0.3554
   -0.0045   -0.0199    0.0204    0.0000   -0.0000   -0.0580    0.0411
    0.0045   -0.0199    0.0204    0.0000    0.0000    0.0580    0.0411

  Column 15

    0.0380
   -0.1951
   -0.1951


ans =

Hirshfeld analysis finished, calculation of iterative AIM will proceed.


Hirshfeld_population =

    7.5925    7.7038    7.7038


iter =

     2


normalization =

    1.0000


valence_population =

    7.5629    7.7185    7.7185


max_change =

    0.0296


max_density_change =

    0.0062


iter =

     3


normalization =

    1.0000


valence_population =

    7.5428    7.7286    7.7286


max_change =

    0.0201


max_density_change =

   4.8401e-04


iter =

     4


normalization =

    1.0000


valence_population =

    7.5315    7.7343    7.7343


max_change =

    0.0113


max_density_change =

   1.8052e-04


ans =

Iterations to converge reshaping: 


ans =

     1


iter =

     5


normalization =

    1.0000


valence_population =

    7.5250    7.7375    7.7375


max_change =

    0.0065


max_density_change =

   8.8011e-05


ans =

Iterations to converge reshaping: 


ans =

     1


iter =

     6


normalization =

    1.0000


valence_population =

    7.5212    7.7394    7.7394


max_change =

    0.0038


max_density_change =

   4.6844e-05


ans =

Iterations to converge reshaping: 


ans =

     1


iter =

     7


normalization =

    1.0000


valence_population =

    7.5190    7.7405    7.7405


max_change =

    0.0022


max_density_change =

   2.5734e-05


ans =

Iterations to converge reshaping: 


ans =

     1


iter =

     8


normalization =

    1.0000


valence_population =

    7.5177    7.7412    7.7412


max_change =

    0.0013


max_density_change =

   1.4422e-05


ans =

Iterations to converge reshaping: 


ans =

     1


iter =

     9


normalization =

    1.0000


valence_population =

    7.5169    7.7416    7.7416


max_change =

   8.0331e-04


max_density_change =

   8.3798e-06


ans =

Iterations to converge reshaping: 


ans =

     1


iter =

    10


normalization =

    1.0000


valence_population =

    7.5164    7.7418    7.7418


max_change =

   4.9261e-04


max_density_change =

   5.0012e-06


ans =

Iterations to converge reshaping: 


ans =

     1


iter =

    11


normalization =

    1.0000


valence_population =

    7.5161    7.7420    7.7420


max_change =

   3.0501e-04


max_density_change =

   3.0229e-06


ans =

Iterations to converge reshaping: 


ans =

     1


iter =

    12


normalization =

    1.0000


valence_population =

    7.5159    7.7421    7.7421


max_change =

   1.9043e-04


max_density_change =

   1.8475e-06


ans =

Iterations to converge reshaping: 


ans =

     1


iter =

    13


normalization =

    1.0000


valence_population =

    7.5158    7.7421    7.7421


max_change =

   1.1975e-04


max_density_change =

   1.1399e-06


ans =

Iterations to converge reshaping: 


ans =

     1


iter =

    14


normalization =

    1.0000


valence_population =

    7.5157    7.7422    7.7422


max_change =

   7.5788e-05


max_density_change =

   7.0912e-07


ans =

Iterations to converge reshaping: 


ans =

     1


iter =

    15


normalization =

    1.0000


valence_population =

    7.5156    7.7422    7.7422


max_change =

   4.8238e-05


max_density_change =

   4.4431e-07


ans =

Iterations to converge reshaping: 


ans =

     1


iter =

    16


normalization =

    1.0000


valence_population =

    7.5156    7.7422    7.7422


max_change =

   3.0861e-05


max_density_change =

   2.8016e-07


ans =

Iterations to converge reshaping: 


ans =

     1


iter =

    17


normalization =

    1.0000


valence_population =

    7.5156    7.7422    7.7422


max_change =

   1.9836e-05


max_density_change =

   1.7765e-07


ans =

Iterations to converge reshaping: 


ans =

     1


iter =

    18


normalization =

    1.0000


valence_population =

    7.5156    7.7422    7.7422


max_change =

   1.2804e-05


max_density_change =

   1.1323e-07


ans =

Iterations to converge reshaping: 


ans =

     1


iter =

    19


normalization =

    1.0000


valence_population =

    7.5156    7.7422    7.7422


max_change =

   8.2983e-06


max_density_change =

   7.2514e-08


ans =

Iterations to converge reshaping: 


ans =

     1


iter =

    20


normalization =

    1.0000


valence_population =

    7.5156    7.7422    7.7422


max_change =

   5.3977e-06


max_density_change =

   4.6638e-08


ans =

Iterations to converge reshaping: 


ans =

     1


iter =

    21


normalization =

    1.0000


valence_population =

    7.5156    7.7422    7.7422


max_change =

   3.5230e-06


max_density_change =

   3.0116e-08


ans =

Iterations to converge reshaping: 


ans =

     1


iter =

    22


normalization =

    1.0000


valence_population =

    7.5156    7.7422    7.7422


max_change =

   2.3068e-06


max_density_change =

   1.9520e-08


ans =

Multipole analysis for each of the expansion sites.


ans =

XYZ coordinates, net charges, and multipoles are in atomic units. Dipoles and quadrupoles are for valence electrons.


ans =

center number, atomic number, x, y, z, net_charge, dipole_x, dipole_y, dipole_z, dipole_mag, Qxy, Qxz, Qyz, Q(x^2-y^2), Q(3z^2 - R^2)


final_result =

  Columns 1 through 7

    1.0000    8.0000    0.0000         0    0.6030    0.4844   -0.0000
    2.0000    8.0000   -0.0000    2.1452   -0.3015    0.2578   -0.0000
    3.0000    8.0000   -0.0000   -2.1452   -0.3015    0.2578    0.0000

  Columns 8 through 14

    0.0000   -0.1301    0.1301    0.0000    0.0000    0.0000    0.0326
   -0.0310   -0.0103    0.0327    0.0000   -0.0000   -0.0988   -0.0880
    0.0310   -0.0103    0.0327   -0.0000   -0.0000    0.0988   -0.0880

  Column 15

   -0.1723
   -0.2827
   -0.2827


center_of_mass =

   1.0e-16 *

   -0.8757         0         0


ans =

Since the system is nonperiodic, total multipole moment analysis will be performed.


ans =

Total multipole moments are computed using the center of mass as the origin.


ans =

Dipole and quadrupole moments using the net atomic charges.


ans =

This corresponds to truncatating the distributed multipole expansion at monopole order.


partial_charge_dipole_x =

   1.9849e-17


partial_charge_dipole_y =

  -1.1067e-09


partial_charge_dipole_z =

    0.1367


partial_charge_dipole_magnitude =

    0.1367


partial_charge_quadrupole_xy =

   1.4527e-16


partial_charge_quadrupole_xz =

   3.2386e-17


partial_charge_quadrupole_yz =

   3.3365e-10


partial_charge_quadrupole_x2minusy2 =

   -2.3725


partial_charge_quadrupole_3z2minusr2 =

   -1.9265


ans =

Dipole and quadrupole moments using the net atomic charges and the atomic dipoles.


ans =

This corresponds to truncatating the distributed multipole expansion at dipole order.


dipole_x =

  -7.2745e-15


dipole_y =

  -2.0876e-09


dipole_z =

   -0.0140


dipole_magnitude =

    0.0140


quadrupole_xy =

  -2.5468e-14


quadrupole_xz =

   1.1555e-16


quadrupole_yz =

   1.0965e-09


quadrupole_x2minusy2 =

   -2.1066


quadrupole_3z2minusr2 =

   -1.9496


ans =

Dipole and quadrupole moments using the net atomic charges, atomic dipoles, and atomic quadrupoles.


ans =

This corresponds to truncatating the distributed multipole expansion at quadrupole order.


dipole_x =

  -7.2745e-15


dipole_y =

  -2.0876e-09


dipole_z =

   -0.0140


dipole_magnitude =

    0.0140


quadrupole_xy =

  -2.6014e-14


quadrupole_xz =

   3.2909e-16


quadrupole_yz =

   1.6577e-09


quadrupole_x2minusy2 =

   -2.2500


quadrupole_3z2minusr2 =

   -2.6873


ans =

Calculation of the electron cloud penetration terms

06-Oct-2012 02:35:49

ans =

Iteratively solving for the atomic spin distributions:


iter =

     1


spin_population =

    0.2119    0.3941    0.3941


tot_spin_moment =

    1.0000


max_change =

    0.3941


iter =

     2


spin_population =

    0.2039    0.3980    0.3980


tot_spin_moment =

    0.9998


max_change =

    0.0080


iter =

     3


spin_population =

    0.2022    0.3989    0.3989


tot_spin_moment =

    1.0000


max_change =

    0.0016


iter =

     4


spin_population =

    0.2018    0.3991    0.3991


tot_spin_moment =

    1.0000


max_change =

   4.6217e-04


iter =

     5


spin_population =

    0.2017    0.3992    0.3992


tot_spin_moment =

    1.0000


max_change =

   1.1465e-04


iter =

     6


spin_population =

    0.2016    0.3992    0.3992


tot_spin_moment =

    1.0000


max_change =

   4.0338e-05


iter =

     7


spin_population =

    0.2016    0.3992    0.3992


tot_spin_moment =

    1.0000


max_change =

   9.7911e-06


ans =

Final spin populations:


spin_population =

    0.2016    0.3992    0.3992


ans =

The total spin moment of the unit cell is   


tot_spin_moment =

    1.0000


ans =

Normal termination of Chargemol program.


ans =

Use and distribution of this program is subject to certain licensing restrictions.


ans =

Please see ddec.sourceforge.net for details.


ans =

Please cite the following journal reference when using this program to compute DDEC, Hirshfeld, or ISA charges:


ans =

Thomas A. Manz and David S. Sholl, "Chemically Meaningful Atomic Charges that Reproduce the Electrostatic Potential in Periodic and Nonperiodic Materials", J. Chem. Theory Comput., Vol. 6 (2010) 2455-2468.


ans =

Please cite the following journal reference when using this program to compute atomic spin moments:


ans =

Thomas A. Manz and David S. Sholl, "Methods for Computing Accurate Atomic Spin Moments for Collinear and Noncollinear Magnetism in Periodic and Nonperiodic Materials", J. Chem. Theory Comput., Vol. 7 (2011) 4146-4164.


ans =

Exiting Chargemol

06-Oct-2012 02:39:35
 
